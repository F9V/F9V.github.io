@page "/parserconfigtable"
@using MudBlazor
@inject HttpClient Http
@using MyNewApp.Shared

<PageTitle>ParserConfigTable</PageTitle>

@if (configurations == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Items="configurations" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
                <MudTh>Configuration Name</MudTh>
                <MudTh>ID</MudTh>
                <MudTh>Version</MudTh>
                <MudTh>Labels</MudTh>
                <MudTh>Last Edit</MudTh>
                <MudTh>Last Edit By</MudTh>
                <MudTh>Status</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.ConfigurationName</MudTd>
            <MudTd>@context.Id</MudTd>
            <MudTd>@context.Version</MudTd>
            <MudTd>@string.Join(", ", context.Labels)</MudTd>
            <MudTd>@context.LastEdit</MudTd>
            <MudTd>@context.LastEditBy</MudTd>
            @if (context.Status == true)
            {
                <MudTd>Active</MudTd>
            }
            else
            {
                <MudTd>Not Active</MudTd>
            }
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
    <div class="d-flex flex-wrap mt-4">
    <MudSwitch @bind-Checked="@hover" Color="Color.Primary">Hover</MudSwitch>
    <MudSwitch @bind-Checked="@dense" Color="Color.Primary">Dense</MudSwitch>
    <MudSwitch @bind-Checked="@striped" Color="Color.Primary">Striped</MudSwitch>
    <MudSwitch @bind-Checked="@bordered" Color="Color.Primary">Bordered</MudSwitch>
    <MudSpacer />
    </div>
}


@code {
    private ParserConfig[]? configurations;

    protected override async Task OnInitializedAsync()
    {
        configurations = await Http.GetFromJsonAsync<ParserConfig[]>("sample-data/configurations.json");
    }
    public class ParserConfig
    {
        public string ConfigurationName { get; set; } = string.Empty;
        public string Id { get; set; } = string.Empty;
        public string Version { get; set; } = string.Empty;
        public List<string> Labels { get; set; } = new List<string>();
        public DateTime LastEdit { get; set; }
        public string LastEditBy { get; set; } = string.Empty;
        public bool Status { get; set; }

    }
    
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;


}
